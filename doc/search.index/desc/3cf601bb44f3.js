rd_("DcAn implicitly scoped parameter declared with <code>@a</code> syntaxChAn associated function within the definition of a trait.CdDefinitely do not not require a sort. Always use \xe2\x80\xa6AjContains the success value000000000000000b||EaA type with an optional binder, e.g, <code>i32</code>, <code>x: i32</code> or \xe2\x80\xa6BlReturns the token at the requested position.CmReturns the highest byte position the cursor has yielded. \xe2\x80\xa6BkAll Rust keywords plus extra Flux keywords.CdReturns the starting byte position of the next tokenCjReturns <code>None</code> if this is <code>Res::Err</code>AkThe binop it is attached toCgGuaranteed to not have any (shallow) existential or \xe2\x80\xa6BcA simplified version of rust types.AkChecks type well-formednessCmKeeps track of all refinement parameters that are used as \xe2\x80\xa6ClLambda abstractions. They are purely syntactic and we don\xe2\x80\xa60CmThe sort automatically generated for an adt (enum/struct) \xe2\x80\xa6j&amp;&amp;CeFunction application. The syntax allows arbitrary \xe2\x80\xa60BdAn arg of the form <code>a: T</code>AbFunction argument.AkKvar can be solved to falseCnUsed to report bugs, typically this means executing an arm \xe2\x80\xa6BiSee <code>rustc_hir::def::Res::Def</code>BmUser-defined functions with a body definition00CkIndicates that there is an existing extern spec for the \xe2\x80\xa6AhContains the error value000000000000000CdRepresents some newtyped <code>usize</code> wrapper.i&lt;=&gt;DkTrait to deal with the fact that <code>assoc_refinmenents_of</code> and \xe2\x80\xa6A`A literal token.0ClA location declared with <code>x: &amp;strg T</code> syntax.ChThe sort of a location parameter introduced with the \xe2\x80\xa6BaMaximum value the index can take.00000000000000000EbPartial mapping from <code>Place</code> to <code>PlaceIndex</code>, where some \xe2\x80\xa6BbData is mutable and not aliasable.BhThe <code>-</code> operator for negationCaThe <code>!</code> operator for logical inversionAkMutable or shared referenceBmUIF representing the relationship of a primop0AhThe resolution of a pathE`Context used to relate two types <code>a</code> and <code>b</code> via subtypingCeTheory symbols <em>interpreted</em> by the SMT solver00AjKvar can be solved to trueCgUser-defined uninterpreted functions with no definition00BfUIF representing the value of a primop0AmInfer the value of the const.CeField is wrapped in a <code>Vec&lt;$inner&gt;</code>.AiDefinitely require a sortDhThe base type <code>b</code> in the subset type <code>{b[e] | p}</code>.ClThis file contains functions and macros to log debugging \xe2\x80\xa6BfDestination path for sysroot artifactsCeThe environment to lookup locations pointed to by \xe2\x80\xa6CnIndex into a TOML array or map. A string index can be used \xe2\x80\xa6CnRetrieve the value stored for a place, or \xe2\x8a\xa4 if it is not \xe2\x80\xa6EhThe refinement index <code>e</code> in the subset type <code>{b[e] | p}</code>. This \xe2\x80\xa6BnThis is the sum over <code>loc_per_attr</code>EeA mapping from <code>rty::KVid</code> to the list of <code>fixpoint::KVid</code>s \xe2\x80\xa6BaA simplified version of rust mir.ChReturns a map that only tracks places whose type has \xe2\x80\xa6ClDefines how flux represents refinement types internally. \xe2\x80\xa6CeAn anonymous region parameter for a given fn (&amp;T)000DbA <em>base</em> sort, e.g., <code>int</code> or <code>bool</code>.btyDo<code>@n</code> or <code>#n</code>, the span corresponds to the span of the \xe2\x80\xa6BlQuery issued to check the body of a functionCkCasts between sorts: id for char, int; if-then-else for \xe2\x80\xa6EbA <em>conc</em>rete predicate, i.e., an <code>Expr</code> that\xe2\x80\x99s not a kvar. \xe2\x80\xa6ChGenerate a conjunction of kvars, one per argument in \xe2\x80\xa6ClA variant used in the logic to represent a variant of an \xe2\x80\xa60CiA shared (deep) borrow. Data must be immutable and is \xe2\x80\xa6ClGenerate a fresh evar for the parameter and solve it via \xe2\x80\xa6Cb<em>E</em>xistential <em>v</em>ariable <em>id</em>0BaAn edge between two basic blocks.Difor indices represented as  <code>enum</code> in the refinement logic \xe2\x80\xa60CmA hole used as a refinement argument or index. It will be \xe2\x80\xa60CjAn immutable, aliasable borrow that is discarded after \xe2\x80\xa6AoFlux\xe2\x80\x99s integration with CargoBnNormalize and simplify inner <code>Expr</code>AlA polymorphic sort function.FcA <em>function</em> sort of the form <code>(bi,...) -&gt; bo</code> where <code>bi..</code> and \xe2\x80\xa6Ai<code>#[help(...)]</code>B`A <code>#[hide]</code> attributeBjA lifetime hole created during desugaring.ChA hole is an expression that must be inferred either \xe2\x80\xa60CmQuery issued when checking an impl method is a subtype of \xe2\x80\xa6dKVarCnGenerate a fresh kvar and let fixpoint infer it. This mode \xe2\x80\xa6CnIn theory a kvar is just an unknown predicate that can use \xe2\x80\xa60CdLazy underflow, Lazy overflow checking; lose all \xe2\x80\xa6CeA miscellaneous context for which we only have a spanBfStrict-Underflow, No overflow checkingiNo value.0CcNo extra information holds, e.g., for a plain goto.Ai<code>#[note(...)]</code>CcA trait for testing whether a token matches a rule.BoA predicate that needs to hold on function exitCjA hole in predicate position (e.g., the predicate in a \xe2\x80\xa60CmA predicate that can be assumed, e.g., in the branches of \xe2\x80\xa6AnA predicate that needs to holdCkAn associated refinements within the definition of a trait.B`A <code>#[reft]</code> attributeBeList of const and refinement genericsChThis are in order so negative is less than non-negative.BbSome value of type <code>T</code>.0AbA compressed span.CiUser-declared variable binding or compiler-introduced \xe2\x80\xa6CdAn associated type within the definition of a trait.CmA generic type parameter: <code>T: Into&lt;String&gt;</code>.AoA type constraint on a location0CfUnit struct or unit variant such as <code>None</code>.AeA user declared sort.Al<code>#[warning(...)]</code>AhZero value of the index.00000000000000000DeThe list of <em>all</em> arguments with the self arguments at the \xe2\x80\xa60DbThe sort arguments, i.e., the list <code>[int, bool]</code> in \xe2\x80\xa6ChThe span for the (base) call-site for def-expanded spans0DjGenerates calls to <code>span_label</code> and similar functions based \xe2\x80\xa6Dhthe actual definition, with the <code>Binder</code> representing the \xe2\x80\xa6ChBody of the function. If not present this definition \xe2\x80\xa6BeThe actual definition of the propertyCmError codes are a optional part of the struct attribute - \xe2\x80\xa6DgConversion from types in <code>fhir</code> to types in <code>rty</code>Ehdefs (<code>fn</code>, <code>enum</code>, \xe2\x80\xa6) matching the given function name as a \xe2\x80\xa6BkFlux High-Level Intermediate RepresentationCbLocates the given place, if it exists in the tree.CiThis modules follows the implementation of folding in \xe2\x80\xa6AoReturns the argument unchangedjfiles matching the glob pattern, e.g. <code>glob:src/ascii/*.rs</code> \xe2\x80\xa6Chwhether or not this function is uninterpreted by defaultCjIs this function \xe2\x80\x9chidden\xe2\x80\x9d i.e. to be considered as \xe2\x80\xa6BaCalls <code>U::from(self)</codenjoin(self, genv, other) consumes the bindings in other, to \xe2\x80\xa6AmThe kind for the entire type.AlList of libraries to installBf\xe2\x80\x9cLift\xe2\x80\x9d HIR types into  FHIR types.AhThe name of the propertyCgLooks at the next token in the underlying cursor to \xe2\x80\xa6DgLike <code>ParseCtxt::lookahead1</code> but it records the expected \xe2\x80\xa6DhThe predicate <code>p</code> in the subset type <code>{b[e] | p}</code>.Clthe rank of this defn in the topological sort of all the \xe2\x80\xa6ChParses a list of one ore more items separated by the \xe2\x80\xa6AkSkip <code>n</code> indicesCgSlug is a mandatory part of the struct attribute as \xe2\x80\xa6AiSpan for the entire type.BgSpan of the struct or the enum variant.AnThe top-level span information0CjThe source span for the AST pertaining to this MIR entity.ksource spanDoThese vars are NOT assigned <code>label</code>, all other <code>KVid</code> \xe2\x80\xa6DiSurrounds <code>inner</code> with destructured wrapper type, exposing \xe2\x80\xa6DhUnique id assigned to each <code>flux_middle::rty::AdtSortDef</code> \xe2\x80\xa6CiA rule that matches if any of the rules in a list matchesAgRepresents a TOML array0a|Ad<code>{ ... }</code>CiCheck a local package and all of its dependencies for \xe2\x80\xa6CjRemove artifacts that cargo-flux has generated in the pastDfAn implicitly scoped parameter declared with <code>x: T</code> syntax.ChAn associated constant within the definition of a trait.ClA const generic parameter: <code>const LENGTH: usize</code>.CkThis is a bit of a hack. We use this type internally to \xe2\x80\xa6DeA parameter introduced with <code>x: T</code> syntax that we know \xe2\x80\xa6lA fixed sizeAgRepresents a TOML float0DdA fresh const variable. See <code>infer::freshen</code> for more \xe2\x80\xa6DgA <code>Guard</code> describes extra \xe2\x80\x9ccontrol\xe2\x80\x9d information that \xe2\x80\xa6BaA sort that needs to be inferred.CfA size that needs to be inferred. Used during sort \xe2\x80\xa6CnA type that needs to be inferred by matching the signature \xe2\x80\xa62Aj<code>#[label(...)]</code>AgAn id for a local spec.DeA local definition. Corresponds to <code>MaybeExternId::Local</code>.CkThe corresponding place was found to be of a particular \xe2\x80\xa6CjOptional sort. Use <code>Sort::Infer</code> if not presentCfNamed fields of a struct or struct variant such as \xe2\x80\xa6BjLate-bound regions that appear in the AST.000DbA refinement parameter, e.g., declared with <code>@n</code> syntaxCkA size that has been parameterized, e.g., bound under a \xe2\x80\xa6BgField isn\xe2\x80\x99t wrapped in an outer type.ClA point in the control flow graph where ghost statements \xe2\x80\xa6DcAn implicitly scoped parameter declared with <code>#a</code> syntaxBoA list of refinement variables and their sorts.Aa&lt;&lt; &gt;&gt;CiThe dataflow state for the <code>PointsToAnalysis</code>.Dg<code>SubFn</code> lets us reuse <em>most</em> of the same code for \xe2\x80\xa6AgRepresents a TOML table0BnUsed for debugging. See <code>TypeTrace</code>DfA <strong>ty</strong>pe <strong>v</strong>ariable <strong>ID</strong>.AoRepresentation of a TOML value.0CeApplies a single projection element, yielding the \xe2\x80\xa6AiThis is not actually used0DeThe block corresponding to the <code>const _: () = { ... }</code> \xe2\x80\xa6BfThe block that the location is within.CbEnables fixpoint query caching. Saves cache in \xe2\x80\xa6ClIf present switches on query caching and saves the cache \xe2\x80\xa6CmChecks whether the slug starts with the crate name it\xe2\x80\x99s \xe2\x80\xa6ChIf true, generate dummy holes instead of kvars. Used \xe2\x80\xa6AnIf true, forces a clean build.BnGenerate a fresh index of type <code>I</code>.CjGenerate a fresh kvar under several layers of binders. \xe2\x80\xa6CgReturns the set of all free variables. For example, \xe2\x80\xa6Achead of each clauseAdName of the variant.AjName of the field, if any.BhThe index of the parameter in the layer.AkThe index of the parameter.CiExtracts the value of this index as a <code>usize</code>.00000000000000000DeDuring borrow checking, <code>rustc</code> generates fresh region \xe2\x80\xa6CoReturns <code>true</code> if the place node is <code>Ty</code>.CeList of all kvars that need to be defined in fixpointDkthe \xe2\x80\x9croot\xe2\x80\x9d of the place, e.g. <code>_1</code> in <code>*_1.f.g.h</code>AlLooks at the next two tokensAnLooks at the next three tokensDhReturns the <code>scope</code> at the marker if it is still valid or \xe2\x80\xa6ClThe source scope, keeping track of which bindings can be \xe2\x80\xa6CgThe sort of each of the fields. Note that these can \xe2\x80\xa6Cifn whose implementation overlaps the file, line, e.g. \xe2\x80\xa6AnIf is true, run library tests.ClTotal time taken to run the complte Flux analysis on the \xe2\x80\xa6CjParses a list of zero or more items. Parsing continues \xe2\x80\xa6BdImplementation of parser combinatorsBkA visitor for types in <code>surface</code>BnA struct that can be used to match any literalCnThese are types of things that may be refined with indices \xe2\x80\xa6DgA type that parses as a <code>BaseTy</code> but was written without \xe2\x80\xa6CnA signed integer in the range [-2^128, 2^128], represented \xe2\x80\xa6e&amp;BbA bit vector with the given width.Bha bitvector sort, e.g., bitvec&lt;32&gt;a^AhThe size of a bit-vectorDdConstrained types <code>{T | p}</code> are like existentials but \xe2\x80\xa6BgA type of the form <code>{T | p}</code>Beexample <code>a: i32{a &gt; 0}</code>BjConstrained type: an exists without binderCkA cursor into the refinement tree. More specifically, a \xe2\x80\xa6DaConvenience struct implementing <code>ErrorEmitter</code> and \xe2\x80\xa6CeA type of the form <code>\xe2\x88\x83v0,\xe2\x80\xa6,vn. {T | p}</code>gB{v: r}CmA \xe2\x80\x9cdummy\xe2\x80\x9d local definition wrapping an external spec. \xe2\x80\xa6ChAn external definition with no corresponding (local) \xe2\x80\xa6DiA unique identifier for a node in the AST. Like <code>HirId</code> it \xe2\x80\xa6ChAn id for a Flux-specific item that doesn\xe2\x80\x99t have a \xe2\x80\xa6AlOfficially, the semantics ofDgThis is the same as <code>RAngle</code> but for opening angle brackets.CkA lambda abstraction with an elaborated output sort. We \xe2\x80\xa60CjA marker is a pointer to a node in the refinement tree \xe2\x80\xa6DiAkin to <code>rustc_resolve::Module</code> but specialized to what we \xe2\x80\xa6CjWe pass through a module. Lookups of items should stop \xe2\x80\xa6DfA <code>NodeId</code> is a unique identifier we assign to some AST \xe2\x80\xa6BbAny other rib without extra rules.AhA numeric sort variable.CaA <em>num</em>eric <em>v</em>variable <em>id</em>BmGeneral catch-all for constants of a given TyChField is wrapped in a <code>Option&lt;$inner&gt;</code>.munary - and !ClNot represented directly in the AST; referred to by name \xe2\x80\xa6BlSee <code>rustc_hir::def::Res::PrimTy</code>DoThere are some lexing ambiguities with <code>&gt;&gt;</code> because it can \xe2\x80\xa6AbCorresponds to \xe2\x80\xa6A`Set intersection0iSet union0nSet difference0nSet membership0AdMake a singleton set0fSubset0BhData must be immutable and is aliasable.CkGenerate a single kvar appending the self arguments and \xe2\x80\xa6ClThe sort associated with a base type. This is normalized \xe2\x80\xa6ClStrict underflow, Strict overflow checking; always check \xe2\x80\xa6AhRepresents a TOML string0Djfor indices represented as <code>struct</code> in the refinement logic \xe2\x80\xa60AiAn interned UTF-8 string.ClCompute statistics about number and size of annotations. \xe2\x80\xa6CdExtracts the string of this value if it is a string.CgExtracts the value of this index as a <code>u32</code>.00000000000000000ChHelper method to interpret <code>target = result</code>.EeUpdates the type of <code>place</code> to <code>new_ty</code>. This may involve a \xe2\x80\xa6CgWhen checking a borrow in the right hand side of an \xe2\x80\xa6ClA mapping from the names of all imported crates plus the \xe2\x80\xa6DfId of the item being checked. This is a <code>MaybeExternId</code> \xe2\x80\xa6Di<code>DefId</code> of the struct or enum this data sort is associated \xe2\x80\xa6D`<code>LocalDefId</code> of the function-like item being checked.CmIf the next token matches the requested rule advances the \xe2\x80\xa6CdTokens to be returned when the macro cannot proceed.AnContent stored in the variant.CnStore a map of field name to its corresponding field. This \xe2\x80\xa6CnFields indexed by their name in the same order they appear \xe2\x80\xa6mFinal tokens.Cewhether or not this function is inlined (i.e. NOT \xe2\x80\xa6Bcexample: <code>i32&lt;@n&gt;</code>DdAdd a <code>node</code> to the map with associated <code>data</code>B`Tests if this value is a string.Bgset of edges where kvid appears as ASSMBgset of edges where kvid appears as HEADAnLayers of late bound variablesCkWhether this alias was lifted from a <code>hir</code> aliasCkWhether this field was lifted from a <code>hir</code> fieldCbWhether this variant was lifted from a hir variantBoWhether the sig was lifted from a hir signatureBdReturns a marker to the current nodeChindex or -index (in Python terms), depending on from_endCgAn (optional) list of universally quantified parametersBoThe list of the type parameters used in the \xe2\x80\xa6CkThe list of parameters including sorts and bit vector sizesDeThe sort <em>at</em> which the primop is defined, The binders for \xe2\x80\xa6CbOptional list of universally quantified parametersDcThe identifier to use for the generated <code>Diag</code> instance.AfSet the default solverClDefault solver. Either <code>z3</code> or <code>cvc5</code>.CdSet of all the tuple arities that need to be definedCmWhether verification for the current crate is enabled. If \xe2\x80\xa6AiRepresents a TOML boolean0Ad<code>[ ... ]</code>BjTime taken to check the body of a functionAdCleanups to be done.Ak== != &lt; &gt; &lt;= &gt;=ChThe \xe2\x80\x9cuse site\xe2\x80\x9d context in which an error is reportedCnThe error was triggered when checking a function body. The \xe2\x80\xa6CoThe <code>Hoister</code> struct is responsible for hoisting \xe2\x80\xa6ClA boolean-like enum used to mark whether a piece of code \xe2\x80\xa6e=&gt;Aa<code>B[r]</code>AiRepresents a TOML integer0DkIndicates that the <code>DefId</code> we are trying to add extern specs \xe2\x80\xa6CfMap to associate data to a node (i.e., an expression).DcOnly propagate <code>true</code> (TOP) and <code>false</code> (BOT)ClUIF application representing a primitive operation, e.g. \xe2\x80\xa6DjA UIF representing a PrimOp expression, e.g. <code>[&lt;&lt;](x, y)</code>c/ %CaUser specified indices (e.g. length, elems, etc.)CbAbstraction over a \xe2\x80\x9csegment\xe2\x80\x9d so we can use \xe2\x80\xa6DkSmall helper trait for abstracting over <code>Option</code> fields that \xe2\x80\xa6CkA shared shallow borrow. The immediately borrowed place \xe2\x80\xa6DkAn argument for a generic parameter in a <code>Sort</code> which can be \xe2\x80\xa6A`A sort variable.BnA <em>sort</em> <em>v</em>variable <em>id</em>Beexample <code>v: &amp;strg i32</code>CmA boolean-like enum used to mark whether some code should \xe2\x80\xa6BcA <code>#[trusted]</code> attributeCaThe sort associated to a (generic) type parameterCmUnnamed fields of a tuple struct or tuple variant such as \xe2\x80\xa6C`Advances the underlying cursor to the next tokenBnExtracts the boolean value if it is a boolean.DgReturns a type that implements <code>fmt::Display</code> using this \xe2\x80\xa60Dhexample: <code>*x: i32{v. v = n+1}</code> or just <code>x &gt; 10</code>BeExclude packages from being processedCmRetrieve the value stored for a place index, or \xe2\x8a\xa4 if it \xe2\x80\xa6CnMutably index into a TOML array or map. A string index can \xe2\x80\xa6DkTransitively follow the parent-chain of <code>def_id</code> to find the \xe2\x80\xa6CkIf present, only check files that match any of the glob \xe2\x80\xa6DkIf present, only check files matching the <code>IncludePattern</code> a \xe2\x80\xa6CjBinders are not allowed at this position, but we parse \xe2\x80\xa6CnGiven the bit width of a signed integer type, produces the \xe2\x80\xa6B`See <code>BigInt::int_max</code>1B`See <code>BigInt::int_min</code>AnGet the symbol for an integer.DgA type is an <em>atom</em> if it is \xe2\x80\x9cself-delimiting\xe2\x80\x9d, i.e., it \xe2\x80\xa6DeAn expression is an <em>atom</em> if it is \xe2\x80\x9cself-delimiting\xe2\x80\x9d, \xe2\x80\xa6BfTests whether this value is a boolean.CkReturns <code>true</code> if the sort is <code>Bool</code>.BgWhether the type is a <code>bool</code>BgWhether the type is a <code>char</code>CkSet to true when this variant is an enum variant rather \xe2\x80\xa6D`Returns <code>true</code> if the node kind is <code>Head</code>.CdWhether the sort is a function with return sort boolDlWhether the expression is <em>literally</em> the constant <code>true</code>.CgWhether this is an aggregate expression with no fields.DfReturns the item inside the const block at position <code>i</code> \xe2\x80\xa6DaSets the directory to dump data. Defaults to <code>./log/</code>.CmA marker to the node in the refinement tree at the end of \xe2\x80\xa6BiReturns true if a token matches this ruleDkMoves the cursor to the specified marker. If <code>clear_children</code>\xe2\x80\xa6BaRun without accessing the networkCfPackage to process (see <code>cargo help pkgid</code>)ClProfile used to build <code>flux-driver</code> and librariesAkPer-query execution timingsC`Return the generics of the containing owner itemBeexample <code>i32{v:v &gt;= 0}</code>AjThe Self type of the impl.CjThis method work only with associated type projections \xe2\x80\xa6DiThis is based on the implementation of the <code>symbols</code> macro \xe2\x80\xa6CnPrint statistics about time taked to analyze each fuction. \xe2\x80\xa6DkTransitively follow the parent-chain of <code>def_id</code> to find the \xe2\x80\xa6CjInfo for the current variant (or the type if not an enum).EdA <strong><code>const</code></strong> <strong>v</strong>ariable <strong>ID</strong>.0BmNo action is to be taken. Continue unwinding.DiWrapper over a type implementing <code>ConvPhase</code>. We have this \xe2\x80\xa6AjRepresents a TOML datetime0AmSee <code>PeekExpected</code>CdA parameter declared in an explicit scope, e.g., \xe2\x80\xa6CbA <code>Path</code> but for refinement expressionsChThe <em>source-order</em> index of a field in a variant.0DjCurrently, index expressions overloaded through the <code>Index</code> \xe2\x80\xa6CkThe entry of the function before the first basic block. \xe2\x80\xa6An<code>#[help_once(...)]</code>CmThe position where a hole appears. This determines how it \xe2\x80\xa60DdIdentity cast, which is erasable (e.g. int -&gt; int, char -&gt; \xe2\x80\xa6AmA generator of fresh indices.EgAn owned contiguous collection of <code>T</code>s, indexed by <code>I</code> rather \xe2\x80\xa6DhAn <code>Instance</code> is the resolved call-target at a particular \xe2\x80\xa6BkCasts to unit index, (e.g. int -&gt; float)DdA lifetime parameter: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.CmOur surface syntax doesn\xe2\x80\x99t have lifetimes. To deal with \xe2\x80\xa6De<code>Location</code> represents the position of the start of the \xe2\x80\xa6AoStore a key value pair in a map0An<code>#[note_once(...)]</code>BaParameters used during gathering.AaA primitive sort.AmAn error produced by a query.CgA predicate required to hold before calling a function.BkA resolved lifetime created during lifting.AaMake an empty set0BoSee <code>flux_syntax::surface::SortPath</code>BbA <code>Path</code> but for sorts.CeA global function definition. It can be either an \xe2\x80\xa6ClA subset type is a simplified version of a type that has \xe2\x80\xa6DhThe item introducing the <code>Self</code> type alias, e.g., an impl \xe2\x80\xa6BkExtracts the array value if it is an array.BjExtracts the float value if it is a float.BjExtracts the table value if it is a table.CiExtracts the value of this index as a <code>usize</code>.00000000000000000BlId of the associated refinement in the trait0DfChecks conditional branching as in a <code>match</code> statement. \xe2\x80\xa6BaIterate over all direct children.CfThis map has the \xe2\x80\x9ctemplates\xe2\x80\x9d generated for the \xe2\x80\xa6BkSaves the the <code>fhir</code> (debugging)CjList of \xe2\x80\x9cexpected\xe2\x80\x9d tokens that have been peeked by \xe2\x80\xa6BlSpace-separated list of features to activateDeCreates a <code>GenericArgs</code> from the definition of generic \xe2\x80\xa6CjCounting backwards from end? This is always false when \xe2\x80\xa6CbCreates a new index from a given <code>u16</code>.00000000000000000CbCreates a new index from a given <code>u32</code>.00000000000000000CbNumber of generics expected by this primitive sortBeTests whether this value is an array.CjWhether the item is a dummy item created by the extern \xe2\x80\xa6CiDetermines whether this punctuated sequence is empty, \xe2\x80\xa6DmWhether the expression is <em>literally</em> the constant <code>false</code>.BdTests whether this value is a float.DgReturns <code>true</code> if the maybe extern id is <code>Local</code>.BdTests whether this value is a table.CjThe set of metavars and the index of the inputs they matchDkGenerates calls to <code>code</code> and similar functions based on the \xe2\x80\xa6Dg<em>Refining</em> is the process of generating a refined version of \xe2\x80\xa6CiRegister all non-excluded places that have scalar layout.Bgexample: <code>requires n &gt; 0</code>AhThe segments in the pathCjsimplifies the given predicate expression by replacing \xe2\x80\xa6CiSimplify the expression by removing double negations, \xe2\x80\xa6E`Returns an error diagnostic on span <code>span</code> with msg <code>msg</code>.CkA string that uniquely identifies a query given an item \xe2\x80\xa6gReturnsClThe trait this <code>Self</code> is a generic parameter for.EdConvert a <code>T</code> into <code>toml::Value</code> which is an enum that can \xe2\x80\xa6DkInterpret a <code>toml::Value</code> as an instance of type <code>T</code>.CjReturns a human-readable representation of the type of \xe2\x80\xa6CmGiven the bit width of an unsigned integer type, produces \xe2\x80\xa6BaSee <code>BigInt::uint_max</code>CdThe span of the variable that originated the lookup.AmA vec of variants of the ADT;Bh<code>&lt;qself as path&gt;::name</code>0A`From bool to intDkA <em>b</em>it <em>v</em>ector <em>size</em> <em>v</em>variable <em>id</em>CmWe do conversion twice: once before sort checking when we \xe2\x80\xa6CiDescribes how a sequence of token trees is delimited. \xe2\x80\xa6CiField information passed to the builder. Deliberately \xe2\x80\xa6CjA map between rust definitions and flux annotations in \xe2\x80\xa6DjThe <code>NodeId</code> is used to resolve the type to a corresponding \xe2\x80\xa6Ca<em>Infer</em>ence <em>mode</em> for a parameter.CgOptions that change the behavior of refinement type \xe2\x80\xa6CjFields shared by the top-level function and its nested \xe2\x80\xa6CkQuery issued to check an (enum) invariant is implied by \xe2\x80\xa6BeA <code>#[invariant]</code> attributeDk<code>\xe2\x88\x85 ... \xe2\x88\x85</code> An invisible delimiter, that may, for example, \xe2\x80\xa6CjWhether the list of parameters in a layer is converted \xe2\x80\xa6DeClassifies locals into categories. See <code>Body::local_kind</code>.AeSelect a key in a map0CnAn anonymous region parameter with a <code>Symbol</code> name.000CcHow a parameter was declared in the surface syntax.Fc<code>ParamSort</code> is used for polymorphic sorts (<code>Set</code>, <code>Map</code>, etc.) \xe2\x80\xa6DiThis is the information tracked for every <code>PlaceIndex</code> and \xe2\x80\xa6BkA fully qualified associated refinement \xe2\x80\xa6CjInformation about the refinement parameters associated \xe2\x80\xa6BfA <code>#[refined_by]</code> attributeDjSingleton refinements e.g. <code>State[On]</code>, <code>State[Off]</code>DhA <strong>region</strong> <strong>v</strong>ariable <strong>ID</strong>.0B`The raw bytes of a simple value.0DfThe sort of a <code>Self</code> type, as used somewhere other than \xe2\x80\xa6CoThe sort of the <code>Self</code> type, as used within a trait.CbA placeholder for a sort that needs to be inferredCjA sort parameter inside a polymorphic function or data \xe2\x80\xa6BkTerminates the execution if unwind happens.CeUsed for debugging to attach a \xe2\x80\x9ctrace\xe2\x80\x9d to the \xe2\x80\xa6CcNumber of binders we\xe2\x80\x99ve entered in <code>a</code>DiSet of all the <code>AdtDefSortDef</code> that need to be declared as \xe2\x80\xa6CmComputes the set of all kvars that can be assigned to Bot \xe2\x80\xa6DgInitialization logic for <code>code_field</code>\xe2\x80\x99s variable, e.g. \xe2\x80\xa6CfParses an item surrounded by an opening an closing \xe2\x80\xa6CeSaves the <code>fhir</code> for each item (debugging)CnStore a map of field name to its corresponding field. This \xe2\x80\xa6DgConstructs a <code>SubdiagnosticVariant</code> from a field or type \xe2\x80\xa6C`Returns inner type for a field, if there is one.AmPer-function analysis timingsDhReturns <code>true</code> if the maybe extern id is <code>Extern</code>.DbReturns <code>true</code> if the node kind is <code>ForAll</code>.DlReturns <code>true</code> if the bound variable kind is <code>Refine</code>.CmSupport for \xe2\x80\x9cpeeking\xe2\x80\x9d into the token stream to decide \xe2\x80\xa6CiNumber of bindings between the root and this node\xe2\x80\x99s \xe2\x80\xa6CiNormalize expressions by applying beta reductions for \xe2\x80\xa6CkThis module implements a points-to analysis for mutable \xe2\x80\xa6ClThe projection used to go from parent to this node (only \xe2\x80\xa6DkThe type used for the <code>resume</code> argument if we are checking a \xe2\x80\xa6ChTests whether this and another value have the same type.CoThe number of arguments consider to be <em>self arguments</em>.0CdRelate types via subtyping and returns coroutine \xe2\x80\xa6CmComputes the set of all kvars that can be assigned to Top \xe2\x80\xa6BeProcess all packages in the workspaceCkThe definition of the data sort automatically generated \xe2\x80\xa6BeA node in the MIR control-flow graph.CnAnonymous region for the implicit env pointer parameter to \xe2\x80\xa6000DfA rust constant. This can be either <code>DefKind::Const</code> or \xe2\x80\xa60CkA \xe2\x80\x9cdummy\xe2\x80\x9d local definition wrapping an extern spec. \xe2\x80\xa6CeA refinement function defined with <code>defs!</code>CgAn inference variable for a const, for use in const \xe2\x80\xa6CmSupport for checking the next token in a stream to decide \xe2\x80\xa6ChMaximum value the index can take, as a <code>u32</code>.00000000000000000BlCreate a map where all keys point to a value0DjAkin to <code>rustc_resolve::ModuleKind</code> but specialized to what \xe2\x80\xa6ClOption-like enum to explicitly mark that we don\xe2\x80\x99t have \xe2\x80\xa6BkSee <code>rustc_hir::def::PartialRes</code>BgThis index uniquely identifies a place.DbA <code>PrimOpProp</code> is a single property for a primitive \xe2\x80\xa6CfA (currently global) <em>primop property</em>; see \xe2\x80\xa6DgA punctuated sequence of values of type <code>T</code> separated by \xe2\x80\xa6CfA <code>QueryErr</code> with extra context informationDoA <em>refine</em>ment <em>tree</em> tracks the \xe2\x80\x9ctree-like structure\xe2\x80\x9d of \xe2\x80\xa6CmGrouped information about the source code origin of a MIR \xe2\x80\xa6Cd<code>#[suggestion{,_short,_hidden,_verbose}]</code>CfThis index uniquely identifies a tracked place and \xe2\x80\xa6CgThe <em>source-order</em> index of a variant in a type.000BfThe refine arguments given to the callDjHelper function for use with <code>throw_*</code> macros - constraints \xe2\x80\xa6CmAdvances the underlying cursor by the requested number of \xe2\x80\xa6CiLooks at the next token and advances the cursor if it \xe2\x80\xa6DgLike <code>ParseCtxt::advance_if</code> but it records the expected \xe2\x80\xa6BoExtracts the integer value if it is an integer.ClThe number of times an attribute appears, e.g., how many \xe2\x80\xa6CkOptimistically keeps running flux even after errors are \xe2\x80\xa6CjConvenience method to push an assumption followed by a \xe2\x80\xa6CkPushes a predicate that must be true assuming variables \xe2\x80\xa6CiIdentifier for variable used for formatted code, e.g. \xe2\x80\xa6DhDefines a fresh refinement variable with the given <code>sort</code> \xe2\x80\xa6DgThis is the mega desugaring function <code>surface::Ty</code> -&gt; \xe2\x80\xa6CcGenerate a fresh kvar in the current scope. See \xe2\x80\xa6CdCreates a new index from a given <code>usize</code>.00000000000000000AgReturns the inner type.CgLow-level method that assigns to a place. This does \xe2\x80\xa6DgCreate an <code>unexpected token</code> error based on the expected \xe2\x80\xa6BgTests whether this value is an integer.BmSee documentation for <code>Lookahead1</code>DnAlways returns <code>true</code> if <code>self</code> is <code>Res::Err</code>CkThe thing being indexed must be at least this long. For \xe2\x80\xa6ClLooks whether the next token matches a binary operation. \xe2\x80\xa6Ehpath taken to \xe2\x80\x9cget\xe2\x80\x9d the place e.g. <code>*.f.g.h</code> in <code>*_1.f.g.h</code>\xe2\x80\xa6CbConvert a (strong) pointer to a mutable reference.CnAppends a syntax tree node onto the end of this punctuated \xe2\x80\xa6DeIdentifier for the binding to the <code>#[primary_span]</code> field.DcSee <code>rustc_middle::ty::ExistentialPredicateStableCmpExt</code>DgRemove all refinements and turn each underlying <code>BaseTy</code> \xe2\x80\xa6CkType alias for qualifier assignments used in constraint \xe2\x80\xa6CkA (shallowly) canonicalized type. This can be either of \xe2\x80\xa6CkRepresents the various closure traits in the language. ThisFnLogic to <em>dispatch</em> a <code>def_id</code> to a provider (<code>local</code>, <code>external</code>, \xe2\x80\xa6BlOwner version of <code>FluxLocalDefId</code>CkA non-integral constant whose value is specified by the \xe2\x80\xa6DfAn <code>ItemLocalId</code> uniquely identifies something within a \xe2\x80\xa6CkEnvironment used to map from <code>rty::Var</code> to a \xe2\x80\xa6CeA struct that can be used to match a non-reserved \xe2\x80\xa6Ad<code>( ... )</code>GmGets the metadata <code>M</code> from a <code>*const</code>/<code>*mut</code>/<code>&amp;</code>/<code>&amp;mut</code> to \xe2\x80\xa6ChWhether a sort is required in a refinement parameter \xe2\x80\xa6CaSee <code>rustc_hir::def::Res::SelfTyAlias</code>CaSee <code>rustc_hir::def::Res::SelfTyParam</code>BfThe result of running the shape phase.CjStrict underflow, Lazy overflow checking; always check \xe2\x80\xa6DhBetter than opaque \xe2\x80\x93 we track <code>DefId</code> so we can get the \xe2\x80\xa6BnTriggers undefined behavior if unwind happens.BfThe refine arguments given to the callClLooks at the next two tokens advacing the cursor if there\xe2\x80\xa6C`Extracts the datetime value if it is a datetime.CjPushes an assumption and moves the cursor into the new \xe2\x80\xa6Akassumptions for each clauseDfDeclare that the <code>def_id</code> of a Flux function definition \xe2\x80\xa6AgDesugar surface literalBnThe list of field names as declared in the \xe2\x80\xa6AdThe left-most child.CmThis crate contains common type definitions that are used \xe2\x80\xa6De<code>Expr</code>s used to instantiate the early bound refinement \xe2\x80\xa6ClReturns true if the constraint has at least one concrete \xe2\x80\xa6BgTests whether this value is a datetime.EcCheck whether the <code>def_id</code> (or the file where <code>def_id</code> is \xe2\x80\xa6CnWhether the type is an <code>int</code> or a <code>uint</code>CmThis module allows storing mir bodies with borrowck facts \xe2\x80\xa6Ac<code>a == b</code>Af<code>a &gt;= b</code>Ae<code>a &gt; b</code>Af<code>a &lt;= b</code>Ae<code>a &lt; b</code>Ac<code>a != b</code>CdFIXME(nilehmann) This is used to store coroutine \xe2\x80\xa6CdGives the number of sort variables bound by this \xe2\x80\xa6CkCode to check whether refinement parameters are used in \xe2\x80\xa6Bj`\xe2\x9f\xa8bin_op\xe2\x9f\xa9 := \xe2\x9f\xa8 a binary operator \xe2\x9f\xa9C`<code>\xe2\x9f\xa8block\xe2\x9f\xa9 := { \xe2\x9f\xa8block_expr\xe2\x9f\xa9 }</code>CnHolds the refinement-arguments for opaque-types; empty for \xe2\x80\xa6DnReturns the <code>DefId</code> this id <em>truly</em> corresponds to, i.e, \xe2\x80\xa6ClReturn the list of flux function definitions that should \xe2\x80\xa6DeWhether the function is marked with <code>#[flux::should_fail]</code>DkWhen a <code>#[flux::refined_by(..)]</code> annotation mentions generic \xe2\x80\xa6DkWe store a <code>ValueIndex</code> if and only if the placed is tracked \xe2\x80\xa6CkThis trait is used to define functions generically over \xe2\x80\xa6CnName used during pretty printing to format anonymous bound \xe2\x80\xa6DeBounded quantifiers <code>exists i in 0..4 { pred(i) }</code> and \xe2\x80\xa60BoFor use with <code>clap::Command::styles</code>BhExit status code used for invalid flags.BjInner type of a field and type of wrapper.DcHow an <code>rty::KVar</code> is encoded in the fixpoint constraintCkAn operation tried to access the internals of an opaque \xe2\x80\xa6DlA subtrait of <code>Peek</code> for rules that have an <em>expected </em>\xe2\x80\xa6AoUsed as the result for r-value.ChA polymorphic function sort parametric over sorts or \xe2\x80\xa6CmA type constructor meant to be used as generic a argument \xe2\x80\xa6CnA very explicit representation of <code>TypeEnv</code> for \xe2\x80\xa6DiA type-relative associated refinement, e.g., <code>Self::name</code>. \xe2\x80\xa6BoAction to be taken when a stack unwind happens.AoActivate all available featuresBkExtracts the array value if it is an array.BjExtracts the table value if it is a table.ClIn the strings in the attributes supplied to this macro, \xe2\x80\xa6CiA canonical type is a type where all existentials and \xe2\x80\xa6BoExplicit discriminant: <code>Variant = 1</code>ClSet of dummy items generated by the extern spec macro we \xe2\x80\xa6DgCall <code>f</code> for the struct or for each variant of the enum, \xe2\x80\xa6DjDesugaring from types in <code>flux_syntax::surface</code> to types in \xe2\x80\xa6CiReturns a vector of arguments to forward to the cargo \xe2\x80\xa60CeReturns an error diagnostic for an invalid attribute.DkWhether a value of <code>sort1</code> can be automatically coerced to a \xe2\x80\xa6FbThe <code>Output</code> associated type is defined in <code>FnOnce</code>, and <code>Fn</code>/\xe2\x80\xa6CnThe number of lines taken by each type of attribute, e.g., \xe2\x80\xa6Ab<code>a + b</code>A`<code>a/b</code>Ab<code>a * b</code>o<code>-a</code>o<code>!a</code>Ab<code>a % b</code>Ai<code>a &lt;&lt; b</code>Ai<code>a &gt;&gt; b</code>Ab<code>a - b</code>BoIndex of the sibling to the right of this node.DdThe logic below is a bit \xe2\x80\x9cduplicated\xe2\x80\x9d with the <code>[</code>\xe2\x80\xa6CkParses a list of zero or more items. Parsing stops when \xe2\x80\xa6BfEnable qualifier scrapping in fixpointCiWhether qualifiers should be scraped from the constraint.BgEnables qualifier scrapping in fixpointAlreplace bot-kvars with falseAkreplace top-kvars with trueCmChecks whether the type <code>ty</code> is <code>bool</code>.CkChecks whether the type <code>ty</code> is <code>()</code>.DoReturns <code>true</code> if <code>FieldInnerTy::with</code> will result in \xe2\x80\xa6Ch<code>Applicability</code> of a suggestion - mirrors \xe2\x80\xa6CiA De Bruijn index is a standard means of representing \xe2\x80\xa60BmMap to keep track of names defined in a scopeAlSee <code>detachXX.rs</code>BiEquivalent to <code>VariantIdx(0)</code>.00DfThe <code>FakeReadCause</code> describes the type of pattern why a \xe2\x80\xa6BiTime taken to run a single fixpoint queryCnA fake read injected into a match guard to ensure that the \xe2\x80\xa6CjThis enum serves as a type-level reminder that a local \xe2\x80\xa6DeThis type represents what we know about a flux-def <em>after</em> \xe2\x80\xa6DcNormally, a <code>DefId</code> is either local or external, and \xe2\x80\xa6BfLocation of function\xe2\x80\x99s return value.AmSee <code>PolyFuncSort</code>DoAn <code>Option&lt;T&gt;</code> that keeps track of the span that caused it \xe2\x80\xa6CdUninterpreted casts, only allowed with explicit flagAiAn uninterpreted constantDcThe binding to the <code>#[applicability]</code> field, if present.ClThe number of regions bound in this layer. Since regions \xe2\x80\xa6BkRustc flags to pass Flux when running testsEcIn contrast (w.r.t. <code>struct</code>) downcast on <code>enum</code> works as \xe2\x80\xa6EgEnter a binder in both <code>a</code> and <code>b</code> creating a mapping between \xe2\x80\xa6AhRefinement type checkingDfGenerates a <code>#[test]</code> that verifies that all referenced \xe2\x80\xa6CoWhether <code>t</code> has any free variables not in this scopeAjIs a non-trivial StructDefAbPath to Cargo.tomlCnResolution of explicitly and implicitly scoped parameters. \xe2\x80\xa6c\xe2\x80\xa6EgSet the pointer size (either <code>32</code> or <code>64</code>), used to determine \xe2\x80\xa6CmTo represent binders for closures i.e. in Fn* traits; see \xe2\x80\xa6ClReplaces all holes with the result of calling a closure. \xe2\x80\xa6CdWhether rust-fixpoint should be enabled to build \xe2\x80\xa6oSimilar to [\xe2\x80\xa6CdCheck whether two refinemnt types/signatures are \xe2\x80\xa6CdDowncast to a particular variant of an enum or a \xe2\x80\xa6BmThe point before a location in a basic block.CgWe treat vars at the function root differently. The \xe2\x80\xa6DhThis specifies which <code>DefId</code> should be checked. It can be \xe2\x80\xa6CkThe sort of an associated type in a trait declaration, e.g:BnPossible styles for suggestion subdiagnostics.AhEnable overflow checkingCkEnable overflow checking. This affects the signature of \xe2\x80\xa6DfIf <code>strict</code> checks for over and underflow on arithmetic \xe2\x80\xa6CmThe most recent module we have visited. Used to check for \xe2\x80\xa6AeSet trusted to ignoreEbEnter a binder in <code>a</code> without a corresponding mapping in <code>b</code>EbEnter a binder in <code>b</code> without a corresponding mapping in <code>a</code>DfIf <code>true</code>, all code will be ignored by default. You can \xe2\x80\xa6CfError format [possible values: human, short, json, \xe2\x80\xa6DnReturns an ident of the form <code>__code_N</code> where <code>N</code> is \xe2\x80\xa6Dd<code>\xe2\x9f\xa8let_decl\xe2\x9f\xa9 := let \xe2\x9f\xa8refine_param\xe2\x9f\xa9 = \xe2\x9f\xa8expr\xe2\x9f\xa9 ;</code>DjHelper function for printing <code>syn::Path</code> - doesn\xe2\x80\x99t handle \xe2\x80\xa6CjPop a scope and check all evars have been solved. This \xe2\x80\xa6CnReturn all the qualifiers that apply to an item, including \xe2\x80\xa6BoThe resolved list of local reveals per functionBoEnable flux-defs to be defined as SMT functionsF`Translates <em>monomorphic</em> <code>defs</code> functions into SMT <code>define-fun</code> \xe2\x80\xa6DdImplementation of <code>GenericsSubstDelegate::sort_for_param</code>fSafetyEgEmit a diagnostic on span <code>$span</code> with msg <code>$msg</code> (optionally \xe2\x80\xa6CkDetermines whether this punctuated sequence ends with a \xe2\x80\xa6DnUseful type to use with <code>Result&lt;&gt;</code> indicate that an error \xe2\x80\xa6CnA fake read injected into a match guard to ensure that the \xe2\x80\xa6EhFake read of the scrutinee of a <code>match</code> or destructuring <code>let</code> \xe2\x80\xa6CdProvides frequently-needed information about the \xe2\x80\xa6CgThe parameter representation of late-bound function \xe2\x80\xa60DgAn explicit representation of a path in the <code>RefineTree</code> \xe2\x80\xa6CkCheck that the number of arguments is the same in all rulesAeCode adapted from \xe2\x80\xa6AfSet trusted to trustedDc<code>downcast</code> on struct works as follows Given a struct \xe2\x80\xa6ChDump constraints generated for each function (debugging)CgReturns all locals with projections that have their \xe2\x80\xa6CjFold local pointers implements roughly a rule like the \xe2\x80\xa6CfInitialization of format strings for code suggestions.0CfRetrieve the value stored for a place index if trackedClList of implicitly scoped params defined in a scope. The \xe2\x80\xa6CmThis crate implements an interface to the liquid-fixpoint \xe2\x80\xa6Ab<code>a | b</code>CiWhether the struct contains any path that needs to be \xe2\x80\xa6CgWhether the enum contains any path that needs to be \xe2\x80\xa6BkNormalize projections but only inside sortsCo<code>\xe2\x9f\xa8epath\xe2\x9f\xa9 := \xe2\x9f\xa8ident\xe2\x9f\xa9 \xe2\x9f\xa8 :: \xe2\x9f\xa8ident\xe2\x9f\xa9 \xe2\x9f\xa9*</code>CcApplies a field projection to an expression and \xe2\x80\xa6DfUsed in conjunction with <code>InferCtxt::pop_evar_scope</code> to \xe2\x80\xa6BnGives the indices of the provided bvars which:DaIf <code>true</code>, all code is trusted by default. You can \xe2\x80\xa6BeSubstitution for late bound variablesDiThe central struct for constructing the <code>into_diag</code> method \xe2\x80\xa6AdPrimitive Properties0CfDuring encoding into fixpoint we generate multiple \xe2\x80\xa6CnThis implement a points to analysis for mutable references \xe2\x80\xa6CaA boolean-like enum used to mark whether some \xe2\x80\xa6BmA <code>#[proven_externally]</code> attributeCnKeep track of all the data sorts that we need to define in \xe2\x80\xa6AlReturns the cargo subcommandEkFor <code>check_terminator</code>, the output <code>Vec&lt;BasicBlock, Guard&gt;</code> \xe2\x80\xa6ClDeclare metavars as variables so they can be accessed in \xe2\x80\xa6CkThe path of the flux sysroot lib containing precompiled \xe2\x80\xa6DhIf <code>true</code>, produce artifacts after analysis. This flag is \xe2\x80\xa6ClGhost statements are statements that are not part of the \xe2\x80\xa6BoEncodes an expression in head position as a \xe2\x80\xa6CeCalled during the first phase to collect the sort \xe2\x80\xa6CnCalled after converting a path with the generic arguments. \xe2\x80\xa6EcCopies <code>source</code> to <code>target</code>, including all tracked places \xe2\x80\xa6CjLow-level method that assigns a value to a place. This \xe2\x80\xa6FiIs <code>ty</code> of the form <code>&amp;m (&amp;m ... (&amp;m T))</code> where <code>T</code> is an \xe2\x80\xa6CfGenerates the code that checks that all the inputs \xe2\x80\xa6Af<code>a &amp; b</code>Ab<code>a ^ b</code>Cj<code>\xe2\x9f\xa8block_expr\xe2\x9f\xa9 = \xe2\x9f\xa8let_decl\xe2\x9f\xa9* \xe2\x9f\xa8expr\xe2\x9f\xa9</code>DdIf <code>self</code> is a primitive, return its <code>Symbol</code>.CfParses a list of zero or more items separated by a \xe2\x80\xa6Dfreturns the same invariants as for <code>usize</code> which is the \xe2\x80\xa6DiTraverse the parent chain of <code>def_id</code> until the first node \xe2\x80\xa6CiSee <code>flux_refineck::type_env::TypeEnv::assign</code>ClThe different reasons we issue fixpoint queries. This is \xe2\x80\xa6CeTypes of subdiagnostics that can be created using \xe2\x80\xa6DjAdds a subdiagnostic by generating a <code>diag.span_$kind</code> call \xe2\x80\xa6CdApply binary relation recursively over aggregate \xe2\x80\xa6DhEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</codekReturns true if either this <code>Punctuated</code> is empty, or it has \xe2\x80\xa6BeSee <code>mk_fake_predecessors</code>CkEncoding of the refinement tree into a fixpoint constraint.CnGlobal <code>Arc</code>-based object interning infrastructure.CnThis crate contains simplified versions of some structures \xe2\x80\xa6CmReturns the binding for the field with the given name, if \xe2\x80\xa6CePath from where to load the rustc-driver library fromCnThe effect of a successful function call return should not \xe2\x80\xa6DjSet to true when a <code>#[subdiagnostic]</code> field is encountered, \xe2\x80\xa6Ajinputs and output in orderDgReturn true if the item has a <code>#[prelude_import]</code> annotationChSimple syntactic check to see if the expression is a \xe2\x80\xa6CjIterator over all local def ids that are not a extern specCdSet of functions annotated with #[proven_externally]DeWhether the function is marked with <code>#[proven_externally]</code>CbThe resolved list of local qualifiers per functionCnPotentially register the (local, projection) place and its \xe2\x80\xa6CfReports a type error for field with <code>attr</code>.fSafetyA`This is like \xe2\x80\xa6DjChecks whether the type name of <code>ty</code> matches <code>name</code>.DoTemporarily (around a function call) convert an <code>&amp;mut</code> to an \xe2\x80\xa6CnCreates a raw pointer to a place that will only be used to \xe2\x80\xa6DjThe function <code>check_fn_subtyping</code> does a function subtyping \xe2\x80\xa6BgSaves the checker\xe2\x80\x99s trace (debugging)CbCreates a new index from a given <code>u32</code>.00000000000000000CbGenerates the code for a field with no attributes.?CcRelate types via subtyping. This is the same as \xe2\x80\xa6CeEmit an error diagnostic for an invalid attribute \xe2\x80\xa6DaWhether to expand type aliases or to generate a <em>weak</em> \xe2\x80\xa6CnFrom CREUSOT: used to store the info about source files An \xe2\x80\xa6CjA substitution with an explicit list of generic arguments.CgSubstitution for generics, i.e., early bound types, \xe2\x80\xa6DhWhen liberating bound regions, we map their <code>BoundRegionKind</code>0Cn<code>#[multipart_suggestion{,_short,_hidden,_verbose}]</code>DkThe central struct for constructing the <code>add_to_diag</code> method \xe2\x80\xa6CjAn interface to the information elaborated during sort \xe2\x80\xa6ClA binary relation is encoded as a structurally recursive \xe2\x80\xa6CkBuild the mapping of field names to fields. This allows \xe2\x80\xa6DcConverts a <code>T: Trait&lt;T0, ..., A0 = S0, ...&gt;</code> boundClGiven a list of generic args, returns an iterator of the \xe2\x80\xa6DhFixes a <code>DefId</code> that may correspond to a dummy local item \xe2\x80\xa6EbGenerate a fresh kvar in the <em>given</em> <code>Scope</code> (similar method \xe2\x80\xa6CiConvert a function signature with existentials to one \xe2\x80\xa60ClTo check for well-formedness we need to synthesize sorts \xe2\x80\xa6C`Do not activate the <code>default</code> featureFbReturns <code>true</code> if <code>field</code> should generate a <code>arg</code> call rather \xe2\x80\xa6C`What kind of diagnostic is being derived - a \xe2\x80\xa6CmRepresents errors that can occur when inserting a mapping \xe2\x80\xa6CkA substitution meant to be used only for sorts. It\xe2\x80\x99ll \xe2\x80\xa6CkBefore the main sort inference, we do a first traversal \xe2\x80\xa6DfThe central struct for constructing the <code>decorate_lint</code> \xe2\x80\xa6DhEach element in the vector correspond to a binder in <code>b</code>. \xe2\x80\xa6DkCollect necessary fold/unfold operations such that <code>self</code> is \xe2\x80\xa6CoSet to true when a <code>#[suggestion_part]</code> field is \xe2\x80\xa6DaThe <code>FalseEdge/imaginary_target</code> edges mess up the \xe2\x80\xa6DgNormalizes an <code>AliasReft</code>. This uses the trait solver to \xe2\x80\xa6CnHoist existentials and predicates inside the type stopping \xe2\x80\xa6CmTrait subtyping check, which makes sure that the type for \xe2\x80\xa6DgConstructs the <code>format!()</code> invocation(s) necessary for a \xe2\x80\xa6DgPrecompute the list of values inside <code>root</code> and store it \xe2\x80\xa6CgGenerates the code that checks if an arg matching a \xe2\x80\xa6DjConvenience method pairing <code>InferCtxt::push_evar_scope</code> and \xe2\x80\xa6CnInvoke a function on each value in the given place and all \xe2\x80\xa6BlSee <code>subst::GenericsSubstForSort</code>DhThis is like <code>TyCtxt::type_param_predicates</code> but computes \xe2\x80\xa6CeEncodes an expression in assumptive position as a \xe2\x80\xa6CjChecks that refinement parameters of function sort are \xe2\x80\xa6DjCalled after converting an <code>fhir::ExprKind::Alias</code> with the \xe2\x80\xa6DiA <code>ScalarInt</code> is just a set of bits that can represent any \xe2\x80\xa6ClRaw content of Fluent resource for this crate, generated \xe2\x80\xa6000000DeRecursively traverse <code>node</code> and declare all refinement \xe2\x80\xa6CfWe encode lambdas with uninterpreted constant. Two \xe2\x80\xa6ClInvoke a function on the given place and all places that \xe2\x80\xa6ClInsert params that are considered to be value determined \xe2\x80\xa6DfParse a <code>SubdiagnosticKind</code> from an <code>Attribute</code>.CcPrepends the path so that it\xe2\x80\x99s the first checked.EeDummy type used for the <code>Self</code> of a <code>TraitRef</code> created when \xe2\x80\xa6D`Iterator over module children visible form <code>curr_mod</code>AjEnable uninterpreted castsCiWhether to allow uninterpreted casts (e.g., from some \xe2\x80\xa6AkEnables uninterpreted castsAjReturn the default sysrootCkGenerates the necessary code for all attributes on a field.ChGiven a list of generic parameters creates a list of \xe2\x80\xa6CnHACK(nilehmann) This let us infer parameters under mutable \xe2\x80\xa6CfParses a list of zero or more items separated by a \xe2\x80\xa6Cksimplifies assumptions and heads using the TOP/BOT kvar \xe2\x80\xa6EjUsed for types that are <code>Copy</code> and which <strong>do not care arena </strong>\xe2\x80\xa6C`Adds a spanned subdiagnostic by generating a \xe2\x80\xa6DjAllocates space to store <code>cap</code> elements of type <code>T</code>.CiWhether we have elaborated information or not (in the \xe2\x80\xa6ChAuxiliary function to merge nested conjunctions in a \xe2\x80\xa6AgChecks if a variable isCmCollect all sorts resolved to a generic type in a list of \xe2\x80\xa6DcFixes the def ids inside <code>res</code> to point to resolved ids.D`Group <code>Fn</code> trait clauses with their corresponding \xe2\x80\xa6Clreturns the \xe2\x80\x98constant\xe2\x80\x99 UIF for Var used to represent \xe2\x80\xa6CePush a layer of bound variables assigning a fresh \xe2\x80\xa6CfDo one step of normalization, unfolding associated \xe2\x80\xa6DeRecursively traverse <code>item</code> and declare all refinement \xe2\x80\xa6DkRecursively traverse <code>invariants</code> and declare all refinement \xe2\x80\xa6CiTracks persistent information required for a specific \xe2\x80\xa6CgGiven the id of an associated refinement in a trait \xe2\x80\xa6DjGenerates the code for a <code>[Meta::List]</code>-like attribute on a \xe2\x80\xa6DjGenerates the code for a <code>[Meta::Path]</code>-like attribute on a \xe2\x80\xa6EcReturns <code>true</code> if <code>self</code> has any late-bound vars that are \xe2\x80\xa6DkEstablishes state in the <code>DiagnosticDeriveBuilder</code> resulting \xe2\x80\xa6DjReplace all non-bound regions with a <code>rty::ReVar</code> assigning \xe2\x80\xa6CnTracks persistent information required for building up the \xe2\x80\xa6DiCheck that Hindly parameters in <code>params</code> appear in a value \xe2\x80\xa6DhReports an error if the field\xe2\x80\x99s type does not match <code>path</code>.DeNormalize an <code>rty::AliasTy</code> by converting it to rustc, \xe2\x80\xa6D`Reports an error if the field\xe2\x80\x99s type is not <code>Span</code>.CfHelper function for returning an absolute path for \xe2\x80\xa6DkReports an error if the field\xe2\x80\x99s type is not <code>Applicability</code>\xe2\x80\xa6")