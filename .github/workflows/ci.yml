name: ci

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install fixpoint
        uses: ./.github/actions/install-fixpoint

      - name: Install Z3
        uses: cda-tum/setup-z3@v1.6.1
        with:
          version: 4.12.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.8

      - name: Build
        run: |
          cargo build

      - name: Run tests
        run: |
          cargo xtask test

  vtock:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install fixpoint
        uses: ./.github/actions/install-fixpoint

      - name: Install Z3
        uses: cda-tum/setup-z3@v1.6.1
        with:
          version: 4.12.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install CVC5
        run: |
          wget https://github.com/cvc5/cvc5/releases/download/cvc5-1.2.1/cvc5-Linux-x86_64-static.zip
          unzip cvc5-Linux-x86_64-static.zip
          rm -f cvc5-Linux-x86_64-static.zip
          sudo cp cvc5-Linux-x86_64-static/bin/cvc5 /usr/local/bin
          rm -rf cvc5-Linux-x86_64-static
          cvc5 --version

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.8

      - name: Install Flux
        run: |
          cargo x install
          echo ~/.cargo/bin >> $GITHUB_PATH

      - name: Clone vtock
        run: |
          git clone https://github.com/PLSysSec/tock
          cp rust-toolchain tock/rust-toolchain.toml

      - name: Patch flux-rs dependency if in pull request
        if: github.event_name == 'pull_request'
        run: |
          echo '[patch."https://github.com/flux-rs/flux.git"]' >> tock/Cargo.toml
          echo 'flux-rs = { path = "../lib/flux-rs" }' >> tock/Cargo.toml

      - name: Check tock/kernel
        run: |
          cd tock
          cargo flux -p kernel

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.8

      - name: Rust rustfmt
        run: cargo fmt --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Add clippy
        run: rustup component add clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.8

      - name: Run check
        run: RUSTFLAGS="-Dwarnings" cargo check

      - name: Run clippy
        uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
